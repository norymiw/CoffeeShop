@page "/"
@inject ApiService ApiService

<PageTitle>Главная - Coffee Shop</PageTitle>

<div class="hero">
    <h1>Добро пожаловать в Coffee Shop</h1>
    <p>Откройте для себя мир изысканных кофейных напитков</p>
</div>

<section class="about-preview">
    <h2>Наша кофейня</h2>
    <p>Мы создаем уникальные кофейные напитки с 2010 года...</p>
    <a href="/about" class="btn">Узнать больше</a>
</section>

<section class="featured-drinks">
    <h2>Сезонные предложения</h2>

    @if (drinks == null)
    {
        <p>Загрузка...</p>
    }
    else
    {
        <div class="drinks-grid">
            @foreach (var drink in drinks.Take(3))
            {
                <div class="drink-card">
                    <img src="@drink.ImageUrl" alt="@drink.Name" />
                    <h3>@drink.Name</h3>
                    <p>@drink.Description</p>
                    <a href="/menu" class="btn">В меню</a>
                </div>
            }
        </div>
    }
</section>

@code {
    private List<Drink> drinks = new(); // Инициализация пустым списком

    protected override async Task OnInitializedAsync()
    {
        try 
        {
            drinks = await ApiService.GetDrinks() ?? new();
        }
        catch (Exception e)
        {
            Console.WriteLine($"Ошибка: {e}");
        }
    }
}

<style>
    .hero {
        background-image: url('/images/coffee-hero.jpg');
        background-size: cover;
        padding: 4rem 2rem;
        text-align: center;
        color: white;
    }

    .drinks-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
    }

    .drink-card {
        border: 1px solid #ddd;
        padding: 1rem;
        border-radius: 8px;
    }

    .btn {
        display: inline-block;
        padding: 0.5rem 1rem;
        background-color: #4a2c2a;
        color: white;
        text-decoration: none;
        border-radius: 4px;
    }
</style>