@page "/profile"
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="logotip.png" type="image/png">
    <title>ECHO COFFEE - Профиль</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Helvetica Neue', Arial, sans-serif;
        }

        body {
            background-color: #f8f5f0;
            color: #3a3226;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            flex: 1;
        }

        /* Header */
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 30px 0;
            border-bottom: 1px solid #d9d2c5;
            position: relative;
        }

        .logo-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .logo-img {
            height: 50px;
            width: auto;
        }

        .logo-text {
            font-size: 28px;
            font-weight: 300;
            letter-spacing: 2px;
            color: #3a3226;
        }

            .logo-text span {
                font-weight: 700;
            }

        /* Навигация */
        nav {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            align-items: center;
        }

        .nav-menu {
            display: flex;
            list-style: none;
            gap: 40px;
            margin: 0;
            padding: 0;
        }

            .nav-menu li a {
                text-decoration: none;
                color: #3a3226;
                font-size: 16px;
                font-weight: 400;
                letter-spacing: 1px;
                transition: color 0.3s;
            }

                .nav-menu li a:hover {
                    color: #a38b6d;
                }

        /* Кнопка бургер-меню */
        .burger-btn {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            width: 30px;
            height: 21px;
            background: transparent;
            border: none;
            cursor: pointer;
            padding: 0;
            position: relative;
            z-index: 100;
        }

        .burger-line {
            display: block;
            width: 100%;
            height: 3px;
            background: #3a3226;
            transition: all 0.3s;
        }

        /* Бургер-меню */
        .burger-menu {
            position: fixed;
            top: 0;
            right: -300px;
            width: 300px;
            height: 100vh;
            background: #fff;
            box-shadow: -5px 0 15px rgba(0,0,0,0.1);
            padding: 80px 30px 30px;
            transition: right 0.3s ease;
            z-index: 90;
        }

            .burger-menu.show {
                right: 0;
            }

        .burger-menu-item {
            padding: 15px 0;
            border-bottom: 1px solid #f0f0f0;
        }

            .burger-menu-item a {
                color: #3a3226;
                text-decoration: none;
                font-size: 16px;
                display: block;
            }

        .auth-btn {
            display: block;
            width: 100%;
            padding: 12px;
            margin-top: 20px;
            background: #3a3226;
            color: white;
            border: none;
            text-align: center;
            cursor: pointer;
            transition: background 0.3s;
        }

            .auth-btn:hover {
                background: #a38b6d;
            }

        /* Затемнение фона */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 80;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s;
        }

            .overlay.show {
                opacity: 1;
                visibility: visible;
            }

        /* Profile Content */
        .profile-header {
            text-align: center;
            margin: 40px 0 30px;
        }

        .profile-title {
            font-size: 32px;
            font-weight: 300;
            letter-spacing: 2px;
            margin-bottom: 10px;
        }

        .profile-subtitle {
            font-size: 16px;
            color: #a38b6d;
        }

        .profile-container {
            display: flex;
            flex-direction: column;
            gap: 40px;
            margin-bottom: 60px;
        }

        .profile-section {
            background: white;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }

        .section-title {
            font-size: 20px;
            font-weight: 400;
            margin-bottom: 25px;
            color: #3a3226;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .edit-btn {
            background: none;
            border: none;
            color: #a38b6d;
            cursor: pointer;
            font-size: 14px;
            transition: color 0.3s;
        }

            .edit-btn:hover {
                color: #3a3226;
            }

        .profile-avatar {
            display: flex;
            align-items: center;
            gap: 30px;
            margin-bottom: 20px;
        }

        .avatar-img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #d9d2c5;
        }

        .avatar-upload {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .avatar-upload-btn {
            background: #f8f5f0;
            border: 1px solid #d9d2c5;
            padding: 8px 15px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 14px;
            transition: all 0.3s;
        }

            .avatar-upload-btn:hover {
                background: #e8e3db;
            }

        .profile-form {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .form-label {
            font-size: 14px;
            color: #666;
        }

        .form-input {
            padding: 10px 15px;
            border: 1px solid #d9d2c5;
            border-radius: 4px;
            font-size: 16px;
            transition: border 0.3s;
        }

            .form-input:focus {
                outline: none;
                border-color: #a38b6d;
            }

        .form-textarea {
            height: 100px;
            resize: vertical;
        }

        .full-width {
            grid-column: 1 / -1;
        }

        .save-btn {
            background: #3a3226;
            color: white;
            border: none;
            padding: 12px 25px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 16px;
            transition: background 0.3s;
            margin-top: 10px;
        }

            .save-btn:hover {
                background: #a38b6d;
            }

        .cancel-btn {
            background: #f8f5f0;
            color: #3a3226;
            border: 1px solid #d9d2c5;
            padding: 12px 25px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 16px;
            transition: all 0.3s;
            margin-top: 10px;
            margin-right: 10px;
        }

            .cancel-btn:hover {
                background: #e8e3db;
            }

        .btn-group {
            display: flex;
            justify-content: flex-end;
            grid-column: 1 / -1;
        }

        .orders-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 15px;
            border: 1px solid #e8e3db;
            border-radius: 4px;
            transition: all 0.3s;
        }

            .order-item:hover {
                background: #f8f5f0;
            }

        .order-info {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .order-number {
            font-weight: 500;
            color: #3a3226;
        }

        .order-date {
            font-size: 14px;
            color: #666;
        }

        .order-status {
            font-size: 14px;
            padding: 3px 10px;
            border-radius: 12px;
            background: #e8e3db;
            align-self: flex-start;
        }

            .order-status.completed {
                background: #e6f7e6;
                color: #2e7d32;
            }

            .order-status.cancelled {
                background: #ffebee;
                color: #c62828;
            }

        .order-price {
            font-weight: 500;
            color: #3a3226;
        }

        .no-orders {
            text-align: center;
            color: #666;
            padding: 30px 0;
        }

        /* Footer */
        .site-footer {
            background-color: #3a3226;
            color: white;
            padding: 50px 0 20px;
            border-top: 1px solid #d9d2c5;
            font-size: 14px;
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .footer-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 40px;
            margin-bottom: 30px;
        }

        .footer-about,
        .footer-contacts,
        .footer-legal {
            padding: 0 15px;
        }

        .site-footer h4 {
            color: #a38b6d;
            margin-bottom: 20px;
            font-size: 18px;
            letter-spacing: 1px;
        }

        .site-footer p {
            line-height: 1.6;
            margin-bottom: 15px;
        }

        .contact-item {
            margin-bottom: 12px;
        }

        .footer-bottom {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #d9d2c5;
        }

        .footer-copyright {
            color: #a38b6d;
            font-size: 13px;
        }

        .footer-links {
            display: flex;
            gap: 20px;
        }

            .footer-links a {
                color: #a38b6d;
                text-decoration: none;
                font-size: 13px;
                transition: color 0.3s;
            }

                .footer-links a:hover {
                    color: white;
                }

        /* Responsive */
        @@media (max-width: 768px) {
            .profile-form {
                grid-template-columns: 1fr;
            }

            .profile-avatar {
                flex-direction: column;
                align-items: flex-start;
            }

            header {
                flex-direction: column;
                gap: 20px;
            }

            nav {
                position: static;
                transform: none;
            }

            .nav-menu {
                gap: 20px;
                flex-wrap: wrap;
                justify-content: center;
            }

            .footer-grid {
                grid-template-columns: 1fr;
                gap: 30px;
            }

            .footer-bottom {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .footer-links {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <header>
            <div class="logo-container">
                <img src="logotip.png" alt="Логотип ECHO COFFEE" class="logo-img">
                <div class="logo-text">ECHO <span>COFFEE</span></div>
            </div>

            <!-- Центральное меню -->
            <nav>
                <ul class="nav-menu">
                    <li><a href="/">ГЛАВНАЯ</a></li>
                    <li><a href="/menu">МЕНЮ</a></li>
                    <li><a href="/contacts">КОНТАКТЫ</a></li>
                </ul>
            </nav>

            <!-- Кнопка бургера -->
            <button class="burger-btn" @onclick="ToggleBurgerMenu">
                <span class="burger-line"></span>
                <span class="burger-line"></span>
                <span class="burger-line"></span>
            </button>
        </header>

        <!-- Бургер-меню -->
        <div class="burger-menu @(isBurgerMenuOpen ? "show" : "")">
            <div class="burger-menu-item">
                <a @onclick='() => NavigateTo("profile")' @onclick:preventDefault>Профиль</a>
            </div>
            <div class="burger-menu-item">
                <a @onclick='() => NavigateTo("settings")' @onclick:preventDefault>Настройки</a>
            </div>
            <button class="auth-btn" @onclick='() => NavigateTo("login")'>АВТОРИЗАЦИЯ</button>
        </div>

        <!-- Затемнение фона -->
        <div class="overlay @(isBurgerMenuOpen ? "show" : "")" @onclick="ToggleBurgerMenu"></div>

        <!-- Profile Content -->
        <main>
            <div class="profile-header">
                <h1 class="profile-title">ВАШ ПРОФИЛЬ</h1>
            </div>

            <div class="profile-container">
                <!-- Личные данные -->
                <div class="profile-section">
                    <div class="section-title">
                        <span>ЛИЧНЫЕ ДАННЫЕ</span>
                        @if (!editModes["personal"])
                        {
                            <button class="edit-btn" @onclick='() => ToggleEditMode("personal")'>
                                РЕДАКТИРОВАТЬ
                            </button>
                        }
                    </div>

                    <div class="profile-avatar">
                        <img src="@user.AvatarUrl" alt="Аватар" class="avatar-img">
                        <div class="avatar-upload">
                            <button type="button" class="avatar-upload-btn" @onclick="OpenFileInput" disabled="@(!editModes["personal"])">
                                ЗАГРУЗИТЬ НОВОЕ ФОТО
                            </button>
                            <span style="font-size: 12px; color: #666;">JPG, PNG, до 2MB</span>
                        </div>
                    </div>

                    <form class="profile-form">
                        <div class="form-group full-width">
                            <label class="form-label">Имя</label>
                            <input type="text" class="form-input" @bind="user.FirstName" disabled="@(!editModes["personal"])">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-input" @bind="user.Email" disabled="@(!editModes["personal"])">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Телефон</label>
                            <input type="tel" class="form-input" @bind="user.Phone" disabled="@(!editModes["personal"])">
                        </div>

                        @if (editModes["personal"])
                        {
                            <div class="btn-group full-width">
                                <button type="button" class="cancel-btn" @onclick='() => ToggleEditMode("personal")'>
                                    ОТМЕНА
                                </button>
                                <button type="button" class="save-btn" @onclick='() => SaveChanges("personal")'>
                                    СОХРАНИТЬ
                                </button>
                            </div>
                        }
                    </form>
                </div>

                <!-- Адрес доставки -->
                <div class="profile-section">
                    <div class="section-title">
                        <span>АДРЕС ДОСТАВКИ</span>
                        @if (!editModes["address"])
                        {
                            <button class="edit-btn" @onclick='() => ToggleEditMode("address")'>
                                РЕДАКТИРОВАТЬ
                            </button>
                        }
                    </div>

                    <form class="profile-form">
                        <div class="form-group">
                            <label class="form-label">Улица</label>
                            <input type="text" class="form-input" @bind="user.Street" disabled="@(!editModes["address"])">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Дом</label>
                            <input type="text" class="form-input" @bind="user.House" disabled="@(!editModes["address"])">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Квартира</label>
                            <input type="text" class="form-input" @bind="user.Apartment" disabled="@(!editModes["address"])">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Этаж</label>
                            <input type="number" class="form-input" @bind="user.Floor" disabled="@(!editModes["address"])">
                        </div>
                        <div class="form-group">
                            <label class="form-label">Домофон/Код</label>
                            <input type="text" class="form-input" @bind="user.Intercom" disabled="@(!editModes["address"])">
                        </div>
                        <div class="form-group full-width">
                            <label class="form-label">Комментарий для курьера</label>
                            <textarea class="form-input form-textarea" @bind="user.DeliveryComment" disabled="@(!editModes["address"])"></textarea>
                        </div>

                        @if (editModes["address"])
                        {
                            <div class="btn-group full-width">
                                <button type="button" class="cancel-btn" @onclick='() => ToggleEditMode("address")'>
                                    ОТМЕНА
                                </button>
                                <button type="button" class="save-btn" @onclick='() => SaveChanges("address")'>
                                    СОХРАНИТЬ
                                </button>
                            </div>
                        }
                    </form>
                </div>

                <!-- История заказов -->
                <div class="profile-section">
                    <div class="section-title">
                        <span>ИСТОРИЯ ЗАКАЗОВ</span>
                    </div>

                    
                </div>
            </div>
        </main>
    </div>

    <!-- Footer -->
    <footer class="site-footer">
        <div class="footer-content">
            <div class="footer-grid">
                <div class="footer-about">
                    <h4>О НАС</h4>
                    <p>
                        ECHO COFFEE — сеть кофеен премиум-класса, основанная в 2015 году.
                        Мы тщательно отбираем зерна с лучших плантаций мира и обжариваем их
                        по уникальной технологии. Наши бариста — настоящие профессионалы,
                        прошедшие обучение у чемпионов мировых чемпионатов бариста.
                    </p>
                </div>

                <div class="footer-contacts">
                    <h4>КОНТАКТЫ</h4>
                    <div class="contact-item">
                        <strong>Телефон:</strong> +7 (800) 555-12-34
                    </div>
                    <div class="contact-item">
                        <strong>Email:</strong> info@echo-coffee.com
                    </div>
                    <div class="contact-item">
                        <strong>Адрес:</strong> г. Череповец, Советский пр. 8
                    </div>
                    <div class="contact-item">
                        <strong>Часы работы:</strong> Ежедневно 8:00–22:00
                    </div>
                </div>

                <div class="footer-legal">
                    <h4>ЮРИДИЧЕСКАЯ ИНФОРМАЦИЯ</h4>
                    <p>
                        ООО "ЭХО КОФЕ"<br>
                        ИНН 1234567890<br>
                        ОГРН 1234567890123<br>
                        Юр. адрес: 162600, Россия, Вологодская обл.,<br>
                        г. Череповец, Советский пр. 8
                    </p>
                </div>
            </div>
        </div>

        <div class="footer-bottom">
            <div class="footer-copyright">
                © @DateTime.Now.Year ECHO COFFEE. Все права защищены.
            </div>
            <div class="footer-links">
                <a href="/privacy">Политика конфиденциальности</a>
                <a href="/terms">Условия использования</a>
            </div>
        </div>
    </footer>

    @code {
        private bool isBurgerMenuOpen = false;
        private Dictionary<string, bool> editModes = new()
    {
    { "personal", false },
    { "address", false }
    };

        private User user = new()
        {
            AvatarUrl = "https://sun1-24.userapi.com/s/v1/ig2/X6lYWt8-F605DYLbbgd_QZ2YcG4V3opUGTjZUaPAcEzmGAXiNbTStcFNiAToPYkWkuoAUqMOfSMdiEJGUBvGe3Ea.jpg?size=1229x1229&quality=96&crop=5,0,1229,1229&ava=1",
            FirstName = "Иван",
            Email = "ivanov@example.com",
            Phone = "+7 (900) 123-45-67",
            Street = "ул. Ленина",
            House = "д. 10",
            Apartment = "кв. 25",
            Floor = 3,
            Intercom = "25#1234",
            DeliveryComment = "Позвонить за 5 минут до приезда",
            Orders = new List<Order>
    {
    new Order { Id = 1001, Date = DateTime.Now.AddDays(-5), Status = "COMPLETED", TotalPrice = 1250 },
    new Order { Id = 1002, Date = DateTime.Now.AddDays(-3), Status = "COMPLETED", TotalPrice = 890 },
    new Order { Id = 1003, Date = DateTime.Now.AddDays(-1), Status = "PROCESSING", TotalPrice = 740 }
    }
        };

        private void ToggleBurgerMenu()
        {
            isBurgerMenuOpen = !isBurgerMenuOpen;
        }

        private void NavigateTo(string page)
        {
            Navigation.NavigateTo($"/{page.ToLower()}", forceLoad: true);
            if (isBurgerMenuOpen)
            {
                ToggleBurgerMenu();
            }
        }

        private void NavigateToOrder(int orderId)
        {
            Navigation.NavigateTo($"/orders/{orderId}");
        }

        private void ToggleEditMode(string section)
        {
            editModes[section] = !editModes[section];
        }

        private void SaveChanges(string section)
        {
            editModes[section] = false;
            // Здесь должна быть логика сохранения данных на сервер
            Console.WriteLine($"Данные раздела {section} сохранены");
        }

        private async Task OpenFileInput()
        {
            await JSRuntime.InvokeVoidAsync("eval", "document.getElementById('avatar-upload').click()");
        }

        private async Task HandleAvatarUpload(InputFileChangeEventArgs e)
        {
            var file = e.File;

            // Проверка размера файла (до 2MB)
            if (file.Size > 2 * 1024 * 1024)
            {
                // Здесь можно показать сообщение об ошибке
                Console.WriteLine("Файл слишком большой (максимум 2MB)");
                return;
            }

            try
            {
                var format = "image/jpeg";
                var resizedImage = await file.RequestImageFileAsync(format, 200, 200);
                var buffer = new byte[resizedImage.Size];
                await resizedImage.OpenReadStream().ReadAsync(buffer);
                user.AvatarUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при загрузке изображения: {ex.Message}");
                // Здесь можно показать сообщение об ошибке
            }
        }

        private string GetStatusText(string status)
        {
            return status switch
            {
                "COMPLETED" => "Завершен",
                "PROCESSING" => "В обработке",
                "CANCELLED" => "Отменен",
                _ => status
            };
        }

        private class User
        {
            public string AvatarUrl { get; set; }
            public string FirstName { get; set; }
            public string Email { get; set; }
            public string Phone { get; set; }
            public string Street { get; set; }
            public string House { get; set; }
            public string Apartment { get; set; }
            public int Floor { get; set; }
            public string Intercom { get; set; }
            public string DeliveryComment { get; set; }
            public List<Order> Orders { get; set; }
        }

        private class Order
        {
            public int Id { get; set; }
            public DateTime Date { get; set; }
            public string Status { get; set; }
            public decimal TotalPrice { get; set; }
        }
    }
</body>
</html>